server {
    listen 80;
    server_name localhost;

    # Serve static files for the React app
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    # Proxy API requests to the Book Service (LOCAL HOST)
    location /api/books {
        # IMPORTANT: For local testing, use host.docker.internal to reach services on the host machine
        # The port must match the port the book-service Spring Boot app is running on locally (e.g., 8080)
        proxy_pass http://host.docker.internal:8080/api/books;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy API requests to the User Service (LOCAL HOST)
    location /api/users {
        # IMPORTANT: For local testing, use host.docker.internal to reach services on the host machine
        # The port must match the port the user-service Spring Boot app is running on locally (e.g., 8081)
        proxy_pass http://host.docker.internal:8081/api/users;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy API requests to the Loan Service (LOCAL HOST)
    location /api/loans {
        # IMPORTANT: For local testing, use host.docker.internal to reach services on the host machine
        # The port must match the port the loan-service Spring Boot app is running on locally (e.g., 8082)
        proxy_pass http://host.docker.internal:8082/api/loans;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}